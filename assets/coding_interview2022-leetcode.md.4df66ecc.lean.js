import{_ as e,c as l,e as t,b as s,d as n,a,o as p,r}from"./app.f042065e.js";const $=JSON.parse('{"title":"2022 面試白板題","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"解題分享","slug":"解題分享","link":"#解題分享","children":[{"level":3,"title":"Longest Increasing Subsequence","slug":"longest-increasing-subsequence","link":"#longest-increasing-subsequence","children":[]},{"level":3,"title":"Candy","slug":"candy","link":"#candy","children":[]},{"level":3,"title":"Median of Two Sorted Arrays","slug":"median-of-two-sorted-arrays","link":"#median-of-two-sorted-arrays","children":[]},{"level":3,"title":"Merge Intervals","slug":"merge-intervals","link":"#merge-intervals","children":[]},{"level":3,"title":"C++相關問題","slug":"c-相關問題","link":"#c-相關問題","children":[]},{"level":3,"title":"彩蛋","slug":"彩蛋","link":"#彩蛋","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]},{"level":2,"title":"心得","slug":"心得","link":"#心得","children":[]},{"level":2,"title":"新登場人物","slug":"新登場人物","link":"#新登場人物","children":[]}],"relativePath":"coding/interview2022-leetcode.md"}'),c={name:"coding/interview2022-leetcode.md"},D=a("",17),y=s("p",null,[n("這邊可以看到 2、5、7、18 跟 2、3、7、18 就是以 18 為結尾的 LIS，"),s("font",{color:"#c2534c"},"但是整個序列的 LIS 不一定是以 18 為結尾的"),n("，說不定不要接 18 的話還可以接得更長(例如在 101 後面多加入 105、120)，所以必須要將每個數當結尾的 LIS 都找出來，找到最長的那個才是整個序列的 LIS。")],-1),C=s("p",null,"但如果直接遞迴解的話，效率會非常差，我這裡就不寫了，看一下圖就懂了。",-1),i=s("p",null,[s("img",{src:"https://i.imgur.com/AphMHqZ.png",alt:""})],-1),A={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},F={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.765ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2548.3 1000"},d=a("",1),b=[d],m=a("",5),h=s("code",null,"lis",-1),u=s("br",null,null,-1),T={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.832ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2577.6 1083.9"},Q=a("",1),f=[Q],_=a("",15),v=s("br",null,null,-1),w={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.832ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2577.6 1083.9"},k=a("",1),S=[k],x=a("",5),L={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},I={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000"},V=a("",1),j=[V],H=a("",33),M=s("font",{color:"#c2534c"},"面試也是一種檢驗自己的方式，就算過了也不一定要換工作啊",-1),B=a("",12);function q(P,Z,N,R,G,J){const o=r("Mermaid");return p(),l("div",null,[D,t(o,{id:"mermaid_382ee1c2",graph:"graph%20TD%3B%0A0%5B18%5D--%3Ea%5B10%5D%0A0%5B18%5D--%3Eb%5B9%5D%0A0%5B18%5D--%3Ec%5B2%5D%0A0%5B18%5D--%3Ed%5B5%5D--%3Eda%5B2%5D%0A0%5B18%5D--%3Ee%5B3%5D--%3Eea%5B2%5D%0A0%5B18%5D--%3Ef%5B7%5D--%3Efa%5B2%5D%0Af%5B7%5D--%3Efb%5B5%5D--%3Efc%5B2%5D%0Af%5B7%5D--%3Efd%5B3%5D--%3Efe%5B2%5D"}),y,C,i,s("p",null,[n("我們會發現很多地方都重複計算了，光是找以 18 為結尾的 LIS 就會重複計算以 5、3、2 為結尾的 LIS，之後找以 7 為結尾的 LIS 的時候一樣會再重複計算到，重複計算的部分非常多，這樣時間複雜度是 "),s("mjx-container",A,[(p(),l("svg",F,b))]),n(" 非常恐怖。")]),m,s("p",null,[h,n(" 是用來紀錄以此數字為結尾的 LIS 長度"),u,n(" 這樣時間複雜度就是 "),s("mjx-container",T,[(p(),l("svg",g,f))]),n(" 比起遞迴的快太多了，當然還有一些優化方式可以更快，我這邊就不展開了，可以到 reference 去看。")]),_,s("p",null,[n("是說我連暴力解都寫得蠻爛的，我後來看到別人的暴力解，簡潔不少。"),v,n(" 這樣做時間複雜度是 "),s("mjx-container",w,[(p(),l("svg",E,S))]),n(" 結果 leetcode 也會過，有點意外，我以為一定要有什麼優化才行。")]),x,s("p",null,[n("這樣時間複雜度就優化到了 "),s("mjx-container",L,[(p(),l("svg",I,j))]),n(" ，leetcode 上還有其他解法，有興趣的可以自己再去看看。")]),H,n("，應該能激勵到很多人，希望能讓很多沒自信的人也可以多去面試看看，說不定就能找到更適合更理想的工作，我身邊有一些朋友尤其是像我弟這樣的轉職仔，他們的共同點就是很沒自信，不太敢去面試，覺得自己能力不足，也不太敢去談薪水，其實不用想太多，"),M,n("，我自己是打算每年都去面試，看看自己是否有所提升，如果又有什麼有趣搞笑的或是我又被瘋狂洗臉的，我一定會再寫一篇給大家笑一下的～"),B])}const O=e(c,[["render",q]]);export{$ as __pageData,O as default};
