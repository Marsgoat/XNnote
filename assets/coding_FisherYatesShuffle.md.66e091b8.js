import{_ as t,c as e,b as s,d as a,e as p,a as n,o,r}from"./app.daeb93e6.js";const J=JSON.parse('{"title":"Fisher–Yates shuffle","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"Shuffle an Array","slug":"shuffle-an-array","link":"#shuffle-an-array","children":[]},{"level":2,"title":"實作","slug":"實作","link":"#實作","children":[{"level":3,"title":"直覺的做法","slug":"直覺的做法","link":"#直覺的做法","children":[]},{"level":3,"title":"直覺的優化做法","slug":"直覺的優化做法","link":"#直覺的優化做法","children":[]},{"level":3,"title":"Fisher-Yates Shuffle","slug":"fisher-yates-shuffle","link":"#fisher-yates-shuffle","children":[]}]},{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[{"level":3,"title":"暴力展開","slug":"暴力展開","link":"#暴力展開","children":[]},{"level":3,"title":"程式驗證","slug":"程式驗證","link":"#程式驗證","children":[]}]},{"level":2,"title":"心得","slug":"心得","link":"#心得","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]},{"level":2,"title":"新登場人物","slug":"新登場人物","link":"#新登場人物","children":[]}],"relativePath":"coding/FisherYatesShuffle.md"}'),c={name:"coding/FisherYatesShuffle.md"},i=n(`<h1 id="fisher–yates-shuffle" tabindex="-1">Fisher–Yates shuffle <a class="header-anchor" href="#fisher–yates-shuffle" aria-hidden="true">#</a></h1><p><code>2022/4/24</code></p><p>關於洗牌這件事又得從研究所時期說起了，因為我當時是開發蜜月橋牌 AI，需要有洗牌發牌這件事，當時也是被彥吉大神上了一課，吉神就像是我的第二個指導教授一樣，感恩吉神讚嘆吉神。</p><h2 id="shuffle-an-array" tabindex="-1">Shuffle an Array <a class="header-anchor" href="#shuffle-an-array" aria-hidden="true">#</a></h2><p>說是洗牌其實也可以想成要<font color="#c2534c">打亂一個</font><code>array</code>，洗牌只是其中一個應用場景，只說洗牌可能會讓人誤會，因為現實世界中洗牌的方式有很多種，比如我們很常見到的<a href="https://en.wikipedia.org/wiki/Shuffling#Riffle" target="_blank" rel="noreferrer">交疊洗牌 Riffle Shuffle</a>。</p><p><img src="https://i.imgur.com/cxrbsFM.jpg" alt="" width="45%"></p><p>上面這個就是交疊洗牌。<br> 剛好最近翻到 2016 的照片就順手貼上來 XDD，當時與魔術社的好友德偉一起在整理一些紙牌技巧，心血來潮就幫他拍了一些照片，當時真的是很瘦阿，髮型也很潮，<font color="#c2534c">歲月真的是一把殺豬刀</font>。</p><p>剛好在 leetcode 中也有一題<a href="https://leetcode.com/problems/shuffle-the-array/" target="_blank" rel="noreferrer">1470. Shuffle the Array</a>是類似這種交疊洗牌的，只是他要完美的一張一張分開交疊，這種完美的交疊洗牌叫做<a href="https://en.wikipedia.org/wiki/Faro_shuffle" target="_blank" rel="noreferrer">Faro Shuffle</a>，中文好像通常稱為完美洗牌或是鴿尾式洗牌，這種洗牌蠻酷的可以做到很多事情，比如我知道只要<font color="#c2534c">連做 Faro shuffle 8 次，整副牌的順序就會恢復原狀</font>，但好像根據 out、in(本來第一張牌在上還在下)的洗法也會有差異的樣子，好像混合洗最快<font color="#c2534c">6 次</font>就可以還原，我也是點了<a href="https://en.wikipedia.org/wiki/Faro_shuffle#Perfect_shuffles" target="_blank" rel="noreferrer">wiki</a>的資料進去看到介紹才知道的，應該很多人以前在學 Faro 的時候都只知道 8 次吧，難道是我已知用火?!</p><font color="#c2534c">有學過的可以留言告訴我，你們一開始就知道是 6 次還是跟我一樣聽到 8 次。</font><blockquote><p>更正一下，這邊 6 次是要剛剛好 64 張牌才可以，52 張的話還是要 8 次才可以，是我沒看清楚 XD，感謝魔術圈的仲神與不認識的大神們提醒，在此修正。<br> 2022/7/18</p></blockquote><p>那我這邊要探討的不是現實中的洗牌，而是 leetcode 的<a href="https://leetcode.com/problems/shuffle-an-array/" target="_blank" rel="noreferrer">384. Shuffle an Array</a>，對的沒錯，剛好 leetcode 都有，我比較意外的是這題居然被歸類為 medium 的題目。</p><p>簡單說就是<font color="#c2534c">要公平的打亂，造成每種組合的機率要相等</font>。<br> 比如丟骰子，丟兩顆骰子會出現 2~12 點共 11 種可能，但造成這些可能的機率並不一樣，比如點數 7 應該是比較容易出現的，能造成 7 點的組合有 2 跟 5、1 跟 6、3 跟 4，但是能造成 12 點的就只有兩個 6 了，機率明顯比較小，所以如果是要打亂骰子就不是一個公平的打亂。</p><h2 id="實作" tabindex="-1">實作 <a class="header-anchor" href="#實作" aria-hidden="true">#</a></h2><h3 id="直覺的做法" tabindex="-1">直覺的做法 <a class="header-anchor" href="#直覺的做法" aria-hidden="true">#</a></h3><p>多宣告一個 array，然後將原來 array 裡的值隨機一個一個 push 到新 array 中，這是我最直覺想到的做法，應該也是很多人的第一感。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shuffle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">deck</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newDeck</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">card</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">splice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">newDeck</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">card</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newDeck</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,16),D={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},y={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000"},F=n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),d=[F],h={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},A={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.832ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2577.6 1083.9"},C=n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(2188.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),T=[C],Q=s("h3",{id:"直覺的優化做法",tabindex:"-1"},[a("直覺的優化做法 "),s("a",{class:"header-anchor",href:"#直覺的優化做法","aria-hidden":"true"},"#")],-1),m={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000"},f=n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1),u=[f],_=n(`<div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shuffleX</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">deck</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    [</span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;">]] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">[deck[i], deck[r]] = [deck[r], deck[i]]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>這段就只是交換他們的值，算是 js 很方便的語法，其他語言寫起來應該是要像下面這樣，多宣告一個變數作為暫存。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">temp = deck[i]</span></span>
<span class="line"><span style="color:#A6ACCD;">deck[i] = deck[r]</span></span>
<span class="line"><span style="color:#A6ACCD;">deck[r] = temp</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然而這段看似簡單的想法其實是會有問題的，可以先自己想想看問題是什麼，再往下看分析。</p><h3 id="fisher-yates-shuffle" tabindex="-1">Fisher-Yates Shuffle <a class="header-anchor" href="#fisher-yates-shuffle" aria-hidden="true">#</a></h3><p>我就先直接放上本篇主題<a href="https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle" target="_blank" rel="noreferrer">Fisher-Yates Shuffle</a>，讓大家可以想一下這兩個做法的差別。<br> 其實想法也是很簡單，就是交換過的就不再換了，比如第一張牌可以跟 52 張牌換，換完後第一張牌就固定了，到第二張牌只能跟後面 51 張牌換，第三張牌只能跟 50 張換，依此類推，最後一張牌就不用換了，因為也只能跟自己換。<br> 實作上我是從後面換回來，這樣只要讓 random number 的範圍每次都-1 就好，當然你想要從前面開始也可以。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shuffle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">deck</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    [</span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;">]] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-hidden="true">#</a></h2><p>那上面兩種方法到底會有什麼影響呢？<br> 那就是造成的結果不公平，機率不平均的問題！<br> 實際給數字來實驗看看吧，數學超差的我最喜歡帶數字進去算了，當然還有最純粹的暴力解！<br></p><p>給定一個初始值為 1,2,3 的 array<code>deck</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> deck </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,12),g=s("font",{color:"#c2534c"},"6 種可能",-1),B=s("br",null,null,-1),k={class:"MathJax",jax:"SVG",style:{direction:"ltr"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.119ex",height:"1.935ex",role:"img",focusable:"false",viewBox:"0 -833.2 936.6 855.2"},v=n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g></g></g></g>',1),E=[v],w=s("font",{color:"#c2534c"},"27 種，但是實際上不一樣的組合只有 6 種，這樣就會造成某種組合比較容易出現，機率不平均的問題。",-1),S=n('<h3 id="暴力展開" tabindex="-1">暴力展開 <a class="header-anchor" href="#暴力展開" aria-hidden="true">#</a></h3><p>舉個例子：<br> 給一個初始為 123 的 array，使用較差的做法出來後分佈如下圖</p><p>第一次換有三種換法</p><ul><li>index1 跟 index1 換 --&gt; 123<br></li><li>index1 跟 index2 換 --&gt; 213<br></li><li>index1 跟 index3 換 --&gt; 321<br></li></ul><p>(為了方便理解我這邊 index 從 1 開始算)</p>',5),V=n("<p>第二次換</p><p>拿 123 的分支當範例</p><ul><li>index2 跟 index1 換 --&gt; 213<br></li><li>index2 跟 index2 換 --&gt; 123<br></li><li>index2 跟 index3 換 --&gt; 132<br></li></ul><p>213 的分支</p><ul><li>index2 跟 index1 換 --&gt; 123<br></li><li>index2 跟 index2 換 --&gt; 213<br></li><li>index2 跟 index3 換 --&gt; 231<br></li></ul><p>依此類推如下圖</p>",6),M=s("p",null,[a("第三次換"),s("br"),a(" （這邊因為整棵樹會太大，我把根節點拿掉且拆成三顆子樹來看）")],-1),L=n(`<p>全部列出來後可以看到<font color="#c2534c">能造成 123、321、312 的換法有 4 種，而能造成 132、213、231 的換法則有 5 種。</font><br> 通過不同的交換方式卻能產生相同的結果，但造成的各種結果機率並不一樣。</p><h3 id="程式驗證" tabindex="-1">程式驗證 <a class="header-anchor" href="#程式驗證" aria-hidden="true">#</a></h3><p>數字小的時候可能還會以為是機率問題而沒有感覺，那我們就直接讓他跑 60 萬次看看結果，如果機率是相同的那應該會每種可能都差不多出現 10 萬次。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">132</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">213</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">231</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">312</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">321</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">shuffleX</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">deck</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">count</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">deck</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)]</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(count)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://i.imgur.com/x1LYslz.png" alt=""></p><p>再來看看使用 Fisher-Yates Shuffle 後的結果</p><p><img src="https://i.imgur.com/S3Dawzy.png" alt=""></p><p>4 張牌的時候差距就更明顯了，這邊洗了 240 萬次，一樣理論上每種可能都會出現差不多 10 萬次。</p><p><img src="https://i.imgur.com/8M6FMqV.png" alt=""></p><p>可以看到明顯機率不平均</p><p><img src="https://i.imgur.com/iqPw4xa.png" alt=""></p><h2 id="心得" tabindex="-1">心得 <a class="header-anchor" href="#心得" aria-hidden="true">#</a></h2><p>其實我自己是不會犯本文中的錯誤的，不是因為我多厲害，是我當時把功能做出來之後根本不會去優化，能動就好，優化是什麼？能吃嗎？<br> 不優化就不會犯錯 XDD，所以我感覺這個錯誤應該是夠厲害的人才會犯的錯，總之還是學習了。<br> 當時是因為我的發牌實在寫得很搞笑讓彥吉看不下去了，叫我去查查，才知道這個洗牌的，後來在做平台的時候也用上了，在記錄這篇的時候還查到了 faro shuffle 的冷知識，有種無用的知識增加了的感覺。</p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h2><p><a href="https://chupai.github.io/posts/2008/shuffle_algorithm/" target="_blank" rel="noreferrer">JavaScript 學演算法（二十一）- 洗牌演算法</a><br><a href="https://blog.codinghorror.com/the-danger-of-naivete/" target="_blank" rel="noreferrer">The Danger of Naïveté</a></p><h2 id="新登場人物" tabindex="-1">新登場人物 <a class="header-anchor" href="#新登場人物" aria-hidden="true">#</a></h2><p>彥吉大神：<br> 我研究所時的學長，之前沒詳細介紹過吉神，簡單說就是神，不是學霸而是神，學霸年年有，但是神是久久才會出現一次的，碩士兩年不曉得寫了幾篇論文，都數不清他出國發表幾次了，而且各種得獎，當年也受到彥吉大神很多的幫忙是個非常照顧人的學長，甚至連出社會開始工作了我還是一直找吉神幫忙，感恩彥吉讚嘆彥吉！</p><p>德偉：<br> 大學時期魔術社的好夥伴，攝影師、3D 動畫師，是個非常有喜感的人，感覺他的人生就是在變胖與瘦回來之間無限循環，只要一年不見就會發現他完全變了個人，厲害的是他都還能瘦得回來。</p><p><a href="/XNnote/coding/">回到目錄</a></p>`,19);function H(j,P,I,Z,N,R){const l=r("Mermaid");return o(),e("div",null,[i,s("p",null,[a("其實這麼做也沒問題，就是效率差了點，因為 array 的 delete 為 "),s("mjx-container",D,[(o(),e("svg",y,d))]),a(" ，這樣子的時間複雜度就為 "),s("mjx-container",h,[(o(),e("svg",A,T))]),a(" ，那再來試試看能不能優化一下")]),Q,s("p",null,[a("想法大致上就是從第一張牌開始，隨機的跟其他張牌交換，這樣一直換到最後一張牌，這些操作都在同個 array 中完成，所以就能將時間複雜度優化到 "),s("mjx-container",m,[(o(),e("svg",b,u))]),a(" 了！")]),_,s("p",null,[a("正常打亂 123 的結果可能有 3 x 2 x 1 = 3! = "),g,a("，分別為 123、132、213、231、321、312。"),B,a(" 但是用我們上面的方法來做的話，可能的換法為 "),s("mjx-container",k,[(o(),e("svg",x,E))]),a(" = "),w]),S,p(l,{id:"mermaid_64a570a4",graph:"graph%20TD%3B%0A0%5B123%5D--%3Ea1%5B123%5D%0A0%5B123%5D--%3Ea2%5B213%5D%0A0%5B123%5D--%3Ea3%5B321%5D"}),V,p(l,{id:"mermaid_64a56f74",graph:"graph%20TD%3B%0A%0A0%5B123%5D--%3Ea1%5B123%5D%0A0%5B123%5D--%3Ea2%5B213%5D%0A0%5B123%5D--%3Ea3%5B321%5D%0A%0Aa1%5B123%5D--%3Eb1%5B213%5D%0Aa1%5B123%5D--%3Eb2%5B123%5D%0Aa1%5B123%5D--%3Eb3%5B132%5D%0A%0Aa2%5B213%5D--%3Eb4%5B123%5D%0Aa2%5B213%5D--%3Eb5%5B213%5D%0Aa2%5B213%5D--%3Eb6%5B231%5D%0A%0Aa3%5B321%5D--%3Eb7%5B213%5D%0Aa3%5B321%5D--%3Eb8%5B321%5D%0Aa3%5B321%5D--%3Eb9%5B312%5D"}),M,p(l,{id:"mermaid_64a56f6c",graph:"graph%20TD%3B%0Aa1%5B123%5D--%3Eb1%5B213%5D%0Aa1%5B123%5D--%3Eb2%5B123%5D%0Aa1%5B123%5D--%3Eb3%5B132%5D%0A%0Ab1%5B213%5D--%3Ec1%5B312%5D%0Ab1%5B213%5D--%3Ec2%5B231%5D%0Ab1%5B213%5D--%3Ec3%5B213%5D%0Ab2%5B123%5D--%3Ec4%5B321%5D%0Ab2%5B123%5D--%3Ec5%5B132%5D%0Ab2%5B123%5D--%3Ec6%5B123%5D%0Ab3%5B132%5D--%3Ec7%5B231%5D%0Ab3%5B132%5D--%3Ec8%5B123%5D%0Ab3%5B132%5D--%3Ec9%5B132%5D"}),p(l,{id:"mermaid_64a56f6a",graph:"graph%20TD%3B%0Aa1%5B213%5D--%3Eb1%5B123%5D%0Aa1%5B213%5D--%3Eb2%5B213%5D%0Aa1%5B213%5D--%3Eb3%5B231%5D%0A%0Ab1%5B123%5D--%3Ec1%5B321%5D%0Ab1%5B123%5D--%3Ec2%5B132%5D%0Ab1%5B123%5D--%3Ec3%5B123%5D%0Ab2%5B213%5D--%3Ec4%5B312%5D%0Ab2%5B213%5D--%3Ec5%5B231%5D%0Ab2%5B213%5D--%3Ec6%5B213%5D%0Ab3%5B231%5D--%3Ec7%5B132%5D%0Ab3%5B231%5D--%3Ec8%5B213%5D%0Ab3%5B231%5D--%3Ec9%5B231%5D"}),p(l,{id:"mermaid_64a56f68",graph:"graph%20TD%3B%0Aa1%5B321%5D--%3Eb1%5B123%5D%0Aa1%5B321%5D--%3Eb2%5B312%5D%0Aa1%5B321%5D--%3Eb3%5B321%5D%0A%0Ab1%5B123%5D--%3Ec1%5B321%5D%0Ab1%5B123%5D--%3Ec2%5B132%5D%0Ab1%5B123%5D--%3Ec3%5B123%5D%0Ab2%5B312%5D--%3Ec4%5B213%5D%0Ab2%5B312%5D--%3Ec5%5B321%5D%0Ab2%5B312%5D--%3Ec6%5B312%5D%0Ab3%5B321%5D--%3Ec7%5B123%5D%0Ab3%5B321%5D--%3Ec8%5B312%5D%0Ab3%5B321%5D--%3Ec9%5B321%5D"}),L])}const X=t(c,[["render",H]]);export{J as __pageData,X as default};
